// FINAL: Do not edit this file unless you are Darrell Warner or have explicit permission.
import { useState, useEffect, useRef } from "react";
import { 
  Home, 
  BarChart3, 
  Settings, 
  User, 
  CreditCard, 
  TrendingUp, 
  Target, 
  Brain, 
  MessageSquare, 
  FileText, 
  Upload, 
  Receipt, 
  Calculator, 
  Building2, 
  Zap, 
  PieChart, 
  Calendar, 
  Bell, 
  Crown, 
  Award, 
  Play, 
  Mic, 
  Music, 
  Headphones, 
  BookOpen, 
  Heart,
  Bot,
  Menu,
  ChevronLeft,
  ChevronRight
} from 'lucide-react';
import { Link, NavLink, useLocation } from "react-router-dom";
import { useUser } from "../../contexts/UserContext";

export default function Sidebar({ isMobileOpen, setIsMobileOpen }: { isMobileOpen: boolean; setIsMobileOpen: (open: boolean) => void }) {
  const [isCollapsed, setIsCollapsed] = useState(false);
  const location = useLocation();
  const sidebarRef = useRef<HTMLDivElement>(null);
  const user = useUser();

  // Preserve sidebar scroll position on route change
  useEffect(() => {
    const sidebar = sidebarRef.current;
    if (sidebar) {
      const savedScrollTop = sessionStorage.getItem('sidebarScrollTop');
      if (savedScrollTop) {
        // Restore scroll position immediately
        sidebar.scrollTop = parseInt(savedScrollTop);
        
        // Also restore after a delay to ensure it sticks
        setTimeout(() => {
          sidebar.scrollTop = parseInt(savedScrollTop);
        }, 100);
        
        // And again after a longer delay
        setTimeout(() => {
          sidebar.scrollTop = parseInt(savedScrollTop);
        }, 500);
      }
    }
  }, [location.pathname]);

  // Save sidebar scroll position before route change
  useEffect(() => {
    const sidebar = sidebarRef.current;
    if (sidebar) {
      const handleScroll = () => {
        sessionStorage.setItem('sidebarScrollTop', sidebar.scrollTop.toString());
      };
      
      sidebar.addEventListener('scroll', handleScroll);
      return () => sidebar.removeEventListener('scroll', handleScroll);
    }
  }, []);

  // Clear scroll position when leaving dashboard
  useEffect(() => {
    if (location.pathname.startsWith('/dashboard')) {
      sessionStorage.removeItem('sidebarScrollPosition');
    }
  }, [location.pathname]);

  // Force scroll restoration on every render for dashboard routes
  useEffect(() => {
    if (location.pathname.startsWith('/dashboard')) {
      const savedPosition = sessionStorage.getItem('sidebarScrollPosition');
      if (savedPosition) {
        setTimeout(() => {
          if (sidebarRef.current) {
            sidebarRef.current.scrollTop = parseInt(savedPosition);
          }
        }, 100);
      }
    }
  }, [location.pathname]);

  const toggleSidebar = () => {
    setIsCollapsed(!isCollapsed);
  };

  // Show labels if not collapsed OR if mobile is open
  const shouldShowLabels = !isCollapsed || isMobileOpen;

  return (
    <aside className="h-full flex flex-col bg-[#1e293b] border-r border-purple-500/10" ref={sidebarRef}>
      {/* Header with Logo - Professional Design */}
      <div className="sticky top-0 border-b border-white/10 p-6 backdrop-blur-md bg-[#1e293b]">
        <div className="flex items-center justify-between">
          {shouldShowLabels && (
            <div className="flex items-center gap-4 flex-1">
              <span className="rounded-full bg-gradient-to-br from-yellow-400 to-orange-500 p-3 shadow-xl">
                <Crown className="text-white" size={28} />
              </span>
              <div>
                <span className="font-bold text-xl leading-tight tracking-tight text-white">XspensesAI</span>
              </div>
            </div>
          )}
          {!shouldShowLabels && (
            <div className="flex items-center justify-center flex-1">
              <span className="rounded-full bg-gradient-to-br from-yellow-400 to-orange-500 p-3 shadow-xl">
                <Crown className="text-white" size={28} />
              </span>
            </div>
          )}
          <div className="flex items-center gap-3">
            {/* Collapse Toggle Button - Only show on desktop */}
            {!isMobileOpen && (
              <button 
                onClick={toggleSidebar}
                className="p-2 text-white/70 hover:text-white hover:bg-white/10 rounded-xl transition-all duration-300"
                style={{ minHeight: '44px', minWidth: '44px' }}
              >
                {isCollapsed ? <ChevronRight size={20} /> : <ChevronLeft size={20} />}
              </button>
            )}
          </div>
        </div>
      </div>

      {/* Navigation with Professional Scrolling - Optimized Height */}
      <nav className="flex-1 overflow-y-auto px-4 py-4" style={{ height: 'calc(100vh - 200px)' }}>
        {/* Main Dashboard */}
        <ul className="space-y-2 mb-6">
          <li>
            <NavLink 
              to="/dashboard" 
              className={({ isActive }) => 
                `flex items-center gap-3 py-3 px-3 rounded-xl transition-all duration-200 hover:bg-white/10 active:scale-95 ${
                  isActive ? 'bg-purple-500/20 border-l-4 border-purple-400' : ''
                }`
              }
              style={{ minHeight: '48px' }}
              onClick={() => isMobileOpen && setIsMobileOpen(false)}
            >
              <BarChart3 size={20} className="flex-shrink-0 text-white/90" />
              {shouldShowLabels && <span className="font-medium text-white/90">Main Dashboard</span>}
            </NavLink>
          </li>
        </ul>

        {/* Personal Finance AI */}
        {shouldShowLabels && (
          <div className="text-xs uppercase tracking-wider text-white/50 mt-6 mb-3 font-bold px-3">
            Personal Finance AI
          </div>
        )}
        <ul className="space-y-2 mb-6">
          <li>
            <NavLink 
              to="/dashboard/smart-import-ai" 
              className={({ isActive }) => 
                `flex items-center gap-3 py-3 px-3 rounded-xl transition-all duration-200 hover:bg-white/10 active:scale-95 ${
                  isActive ? 'bg-purple-500/20 border-l-4 border-purple-400' : ''
                }`
              }
              style={{ minHeight: '48px' }}
              onClick={() => isMobileOpen && setIsMobileOpen(false)}
            >
              <Upload size={20} className="flex-shrink-0 text-white/90" />
              {shouldShowLabels && <span className="font-medium text-white/90">Smart Import AI</span>}
            </NavLink>
          </li>
          <li>
            <NavLink 
              to="/dashboard/ai-financial-assistant" 
              className={({ isActive }) => 
                `flex items-center gap-3 py-3 px-3 rounded-xl transition-all duration-200 hover:bg-white/10 active:scale-95 ${
                  isActive ? 'bg-purple-500/20 border-l-4 border-purple-400' : ''
                }`
              }
              style={{ minHeight: '48px' }}
              onClick={() => isMobileOpen && setIsMobileOpen(false)}
            >
              <Bot size={20} className="flex-shrink-0 text-white/90" />
              {shouldShowLabels && <span className="font-medium text-white/90">AI Financial Assistant</span>}
            </NavLink>
          </li>
          <li>
            <NavLink 
              to="/dashboard/financial-therapist" 
              className={({ isActive }) => 
                `flex items-center gap-3 py-3 px-3 rounded-xl transition-all duration-200 hover:bg-white/10 active:scale-95 ${
                  isActive ? 'bg-purple-500/20 border-l-4 border-purple-400' : ''
                }`
              }
              style={{ minHeight: '48px' }}
              onClick={() => isMobileOpen && setIsMobileOpen(false)}
            >
              <Heart size={20} className="flex-shrink-0 text-white/90" />
              {shouldShowLabels && <span className="font-medium text-white/90">AI Financial Therapist</span>}
            </NavLink>
          </li>
          <li>
            <NavLink 
              to="/dashboard/goal-concierge" 
              className={({ isActive }) => 
                `flex items-center gap-3 py-3 px-3 rounded-xl transition-all duration-200 hover:bg-white/10 active:scale-95 ${
                  isActive ? 'bg-purple-500/20 border-l-4 border-purple-400' : ''
                }`
              }
              style={{ minHeight: '48px' }}
              onClick={() => isMobileOpen && setIsMobileOpen(false)}
            >
              <Target size={20} className="flex-shrink-0 text-white/90" />
              {shouldShowLabels && <span className="font-medium text-white/90">AI Goal Concierge</span>}
            </NavLink>
          </li>
          <li>
            <NavLink 
              to="/dashboard/spending-predictions" 
              className={({ isActive }) => 
                `flex items-center gap-3 py-3 px-3 rounded-xl transition-all duration-200 hover:bg-white/10 active:scale-95 ${
                  isActive ? 'bg-purple-500/20 border-l-4 border-purple-400' : ''
                }`
              }
              style={{ minHeight: '48px' }}
              onClick={() => isMobileOpen && setIsMobileOpen(false)}
            >
              <TrendingUp size={20} className="flex-shrink-0 text-white/90" />
              {shouldShowLabels && <span className="font-medium text-white/90">Spending Predictions</span>}
            </NavLink>
          </li>
        </ul>

        {/* Additional Features */}
        {shouldShowLabels && (
          <div className="text-xs uppercase tracking-wider text-white/50 mt-6 mb-3 font-bold px-3">
            Additional Features
          </div>
        )}
        <ul className="space-y-2 mb-6">
          <li>
            <NavLink 
              to="/dashboard/personal-podcast" 
              className={({ isActive }) => 
                `flex items-center gap-3 py-3 px-3 rounded-xl transition-all duration-200 hover:bg-white/10 active:scale-95 ${
                  isActive ? 'bg-purple-500/20 border-l-4 border-purple-400' : ''
                }`
              }
              style={{ minHeight: '48px' }}
              onClick={() => isMobileOpen && setIsMobileOpen(false)}
            >
              <Mic size={20} className="flex-shrink-0 text-white/90" />
              {shouldShowLabels && <span className="font-medium text-white/90">Personal Podcast</span>}
            </NavLink>
          </li>
          <li>
            <NavLink 
              to="/dashboard/spotify-integration" 
              className={({ isActive }) => 
                `flex items-center gap-3 py-3 px-3 rounded-xl transition-all duration-200 hover:bg-white/10 active:scale-95 ${
                  isActive ? 'bg-purple-500/20 border-l-4 border-purple-400' : ''
                }`
              }
              style={{ minHeight: '48px' }}
              onClick={() => isMobileOpen && setIsMobileOpen(false)}
            >
              <Music size={20} className="flex-shrink-0 text-white/90" />
              {shouldShowLabels && <span className="font-medium text-white/90">Spotify Integration</span>}
            </NavLink>
          </li>
          <li>
            <NavLink 
              to="/dashboard/wellness-studio" 
              className={({ isActive }) => 
                `flex items-center gap-3 py-3 px-3 rounded-xl transition-all duration-200 hover:bg-white/10 active:scale-95 ${
                  isActive ? 'bg-purple-500/20 border-l-4 border-purple-400' : ''
                }`
              }
              style={{ minHeight: '48px' }}
              onClick={() => isMobileOpen && setIsMobileOpen(false)}
            >
              <Heart size={20} className="flex-shrink-0 text-white/90" />
              {shouldShowLabels && <span className="font-medium text-white/90">Wellness Studio</span>}
            </NavLink>
          </li>
        </ul>

        {/* Tools */}
        {shouldShowLabels && (
          <div className="text-xs uppercase tracking-wider text-white/50 mt-6 mb-3 font-bold px-3">
            Tools
          </div>
        )}
        <ul className="space-y-2 mb-6">
          <li>
            <NavLink 
              to="/dashboard/analytics" 
              className={({ isActive }) => 
                `flex items-center gap-3 py-3 px-3 rounded-xl transition-all duration-200 hover:bg-white/10 active:scale-95 ${
                  isActive ? 'bg-purple-500/20 border-l-4 border-purple-400' : ''
                }`
              }
              style={{ minHeight: '48px' }}
              onClick={() => isMobileOpen && setIsMobileOpen(false)}
            >
              <BarChart3 size={20} className="flex-shrink-0 text-white/90" />
              {shouldShowLabels && <span className="font-medium text-white/90">Analytics</span>}
            </NavLink>
          </li>
          <li>
            <NavLink 
              to="/dashboard/settings" 
              className={({ isActive }) => 
                `flex items-center gap-3 py-3 px-3 rounded-xl transition-all duration-200 hover:bg-white/10 active:scale-95 ${
                  isActive ? 'bg-purple-500/20 border-l-4 border-purple-400' : ''
                }`
              }
              style={{ minHeight: '48px' }}
              onClick={() => isMobileOpen && setIsMobileOpen(false)}
            >
              <Settings size={20} className="flex-shrink-0 text-white/90" />
              {shouldShowLabels && <span className="font-medium text-white/90">Settings</span>}
            </NavLink>
          </li>
          <li>
            <NavLink 
              to="/dashboard/reports" 
              className={({ isActive }) => 
                `flex items-center gap-3 py-3 px-3 rounded-xl transition-all duration-200 hover:bg-white/10 active:scale-95 ${
                  isActive ? 'bg-purple-500/20 border-l-4 border-purple-400' : ''
                }`
              }
              style={{ minHeight: '48px' }}
              onClick={() => isMobileOpen && setIsMobileOpen(false)}
            >
              <FileText size={20} className="flex-shrink-0 text-white/90" />
              {shouldShowLabels && <span className="font-medium text-white/90">Reports</span>}
            </NavLink>
          </li>
        </ul>
      </nav>

      {/* Profile footer at the very bottom */}
      <div className="border-t border-white/10 px-4 py-4 mt-auto w-full box-border bg-[#1e293b]">
        {shouldShowLabels && (
          <div className="p-4 bg-gradient-to-r from-blue-900/50 to-purple-900/50 rounded-xl border border-white/10">
            <div className="flex items-center gap-3 mb-3">
              <div className="w-10 h-10 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full flex items-center justify-center">
                <User size={20} className="text-white" />
              </div>
              <div className="flex-1">
                <div className="font-semibold text-white text-sm">{user?.name || 'John Doe'}</div>
                <div className="text-xs text-gray-300">{user?.plan || 'Premium Plan'}</div>
              </div>
            </div>
            <div className="bg-gradient-to-r from-orange-500 to-yellow-500 rounded-full text-xs text-white px-3 py-1 inline-block font-medium">
              Level 8 Money Master
            </div>
          </div>
        )}
        {!shouldShowLabels && (
          <div className="flex justify-center">
            <div className="w-10 h-10 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full flex items-center justify-center">
              <User size={20} className="text-white" />
            </div>
          </div>
        )}
      </div>
    </aside>
  );
}
